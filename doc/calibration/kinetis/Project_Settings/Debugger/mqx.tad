[strings:TASK_ERROR_CODE]
0x0     = OK
0x1     = Invalid Pointer
0x2     = Invalid Size
0x3     = Not Resource Owner
0x4     = Out of Memory
0x6     = Corrupt Storage Pool
0x7     = Corrupt Storage Pool Free List
0x8     = Corrupt Storage Pool Pointers
0x9     = Invalid Checksum
0xa     = Out of Task Descriptors
0xb     = Invalid Memory Block
0xc     = Invalid Parameter
0xd     = Cannot Call Function from ISR
0xe     = Invalid Task Priority
0xf     = Task Queue Empty
0x10    = No Task Template
0x11    = Invalid Task State
0x12    = Invalid Task ID
0x13    = Invalid Processor Number
0x14    = Invalid Vectored Interrupt
0x17    = Component Exists
0x18    = Component Does Not Exist
0x19    = Invalid Component Handle
0x1a    = Invalid Component Base
0x1b    = Invalid Component Name
0x1c    = Invalid Handle
0x15    = Invalid template index
0x16    = Invalid configuration
0x1d    = Corrupt Queue
0x1e    = Invalid Task Queue
0x1f    = Invalid LWSem
0x20    = Corrupt Interrupt Stack
0x21    = Kernel Memory Too Small
0x22    = Could Not Create IPC Task
0x23    = Too Many Priority Levels
0x24    = Too Many Interrupts
0x25    = Duplicate Task Template Index
0x26    = Timer ISR Install Fail
0x27    = SCHED: Invalid Policy
0x28    = SCHED: Invalid Parameter Ptr
0x29    = SCHED: Invalid Parameter
0x2a    = SCHED: Invalid Task ID
0x2b    = IO: Invalid Channel
0x2c    = IO: Operation Not Available
0x2d    = IPC: Init Failed
0x2e    = IPC: Invalid Message
0x2f    = IPC: Service Not Available
0x30    = IPC_ROUTE_EXISTS
0x31    = MEM_POOL_TOO_SMALL
0x32    = MEM_POOL_INVALID
0x33    = OUT_OF_MMU_PAGE_TABLES
0x34    = MMU_CONTEXT_EXISTS
0x35    = MMU_CONTEXT_DOES_NOT_EXIST
0x36    = MMU_PARENT_TASK_CANNOT_BE_MMU
0xfe    = MMU_ERROR
0x701   = MSGP: Out of Messages
0x702   = MSGP: Out of Pools
0x703   = MSGP: Invalid Pool ID
0x704   = MSGP: All Messages not Free
0x705   = MSGP: Message Size too Small
0x706   = MSGP: Pool not Created
0x710   = MSGQ: Invalid Queue ID
0x711   = MSGQ: Queue in Use
0x712   = MSGQ: Not Queue Owner
0x713   = MSGQ: Queue is not Open
0x714   = MSGQ: Message not Available
0x715   = MSGQ: Invalid Message Priority
0x716   = MSGQ: Invalid Message
0x717   = MSGQ: Queue Full
0x718   = MSGQ: Receive Timeout
0x719   = MSGQ: Too many Queues
0x71a   = MSGQ: Message is Queued
0x71b   = MSGQ: Invalid Queue Number
0x720   = MSG: Cannot create Component
0x100   = SEM: Multi Proc Not Available
0x101   = SEM: Semaphore Deleted
0x102   = SEM: Semaphore Not Deleted
0x103   = SEM: Invalid Handle
0x104   = SEM: Cannot Post
0x105   = SEM: Cannot Get
0x106   = SEM: Invalid Count
0x107   = SEM: Wait Timeout
0x108   = SEM: Exists
0x109   = SEM: Table Full
0x10a   = SEM: Not Found
0x10b   = SEM: Invalid Policy
0x10c   = SEM: Invalid Semaphore
0x10d   = SEM: Incorrect Initial Count
0x300   = EVT: Multi Proc Not Available
0x301   = EVT: Event Deleted
0x302   = EVT: Not Deleted
0x303   = EVT: Invalid Handle
0x304   = EVT: Cannot Set
0x305   = EVT: Cannot Get
0x306   = EVT: Invalid Count
0x307   = EVT: Wait Timeout
0x308   = EVT: Exists
0x309   = EVT: Table Full
0x30a   = EVT: Not Found
0x30b   = EVT: Invalid Event
0xf00   = NAME: Table Full
0xf01   = NAME: Exists
0xf02   = NAME: Not Found
0xf03   = NAME: Too Long
0xf04   = NAME: Too Short
0x801   = PART: Invalid
0x802   = PART: Out of Blocks
0x803   = PART: Invalid Alignment
0x804   = PART: Too Small
0x805   = PART: Invalid Task ID
0x806   = PART: Invalid Checksum
0x807   = PART: Invalid Type
0x808   = PART: All Blocks not Free
0x601   = WDOG: Invalid Error Function
0x602   = WDOG: Invalid Interrupt Vector
0x30c   = EVENT_CANNOT_WAIT_ON_REMOTE_EVENT
0x500   = LOG_INVALID
0x501   = LOG_EXISTS
0x502   = LOG_DOES_NOT_EXIST
0x503   = LOG_FULL
0x504   = LOG_ENTRY_NOT_AVAILABLE
0x505   = LOG_DISABLED
0x506   = LOG_INVALID_READ_TYPE
0x507   = LOG_INVALID_SIZE
0x37    = LWSEM_WAIT_TIMEOUT
0x38    = LWMEM_POOL_INVALID
0x39    = LWEVENT_INVALID
0x40    = LWTIMER_INVALID
0x41    = MQX_UNHANDLED_INTERRUPT
0x310   = LWEVENT_WAIT_TIMEOUT
0x780   = LWMSGQ_INVALID
0x781   = LWMSGQ_FULL
0x782   = LWMSGQ_EMPTY
0x783   = LWMSGQ_TIMEOUT
0xa00   = IO_DEVICE_EXISTS
0xa01   = IO_DEVICE_DOES_NOT_EXIST
0xa02   = IO_ERROR_READ
0xa03   = IO_ERROR_WRITE
0xa04   = IO_ERROR_SEEK
0xa05   = IO_ERROR_WRITE_PROTECTED
0xa06   = IO_ERROR_READ_ACCESS
0xa07   = IO_ERROR_WRITE_ACCESS
0xa08   = IO_ERROR_SEEK_ACCESS
0xa09   = IO_ERROR_INVALID_IOCTL_CMD
0xa0a   = IO_ERROR_DEVICE_BUSY
0xa10   = IO_ERROR_TIMEOUT
0xa11   = IO_ERROR_INQUIRE
0x401   = E2BIG
0x402   = EACCES
0x403   = EAGAIN
0x404   = EBADF
0x405   = EBADMSG
0x406   = EBUSY
0x407   = ECANCELED
0x408   = ECHILD
0x409   = EDEADLK
0x40a   = EDOM
0x40b   = EEXIST
0x40c   = EFAULT
0x40d   = EFBIG
0x40e   = EINPROGRESS
0x40f   = EINTR
0x410   = EINVAL
0x411   = EIO
0x412   = EISDIR
0x413   = EMFILE
0x414   = EMLINK
0x415   = EMSGSIZE
0x416   = ENAMETOOLONG
0x417   = ENFILE
0x418   = ENODEV
0x419   = ENOENT
0x41a   = ENOEXEC
0x41b   = ENOLCK
0x41c   = ENOMEM
0x41d   = ENOSPC
0x41e   = ENOSYS
0x41f   = ENOTDIR
0x420   = ENOTEMPTY
0x421   = ENOTSUP
0x422   = ENOTTY
0x423   = ENXIO
0x424   = EPERM
0x425   = EPIPE
0x426   = ERANGE
0x427   = EROFS
0x428   = ESPIPE
0x429   = ESRCH
0x42a   = ETIMEDOUT
0x42b   = EXDEV
0x202   = EDS: SERIAL_ALREADY_CREATED
0x203   = EDS: SERIAL_CANT_DESTROY
0x204   = EDS: SERIAL_IO_FAILED
0x2010  = I/O PCB: Pool Invalid
0x2011  = I/O PCB: Invalid
0x2012  = I/O PCB: Not  PCB
0x2013  = I/O PCB: Not a PCB device
0x2014  = I/O PCB: Read not available
0x2015  = I/O PCB: Write not available
0x2016  = I/O PCB: Device does not exist
0x2017  = I/O PCB: Alloc callback failed
0x9031  = IPC PCB: Packet pool create failed
0x9032  = IPC PCB: Invalid queue
0x9033  = IPC PCB: Device open failed
0x9034  = IPC PCB: Output pcb pool create failed
0x9035  = IPC PCB: Input pcb pool create failed
0xA400  = ENET: Invalid device number
0xA401  = ENET: Device already initialized
0xA402  = ENET: Couldn't allocate state (out of memory)
0xA403  = ENET: Couldn't allocate PCBs (out of memory)
0xA404  = ENET: Couldn't allocate buffer descriptors
0xA405  = ENET: Couldn't install Ethernet notifier
0xA406  = ENET: Some PCBs are still in use
0xA407  = ENET: Out of memory
0xA408  = ENET: Protocol already open
0xA409  = ENET: Not an open protocol
0xA40a  = ENET: Packet too short
0xA40b  = ENET: Packet too long
0xA40c  = ENET: Not a multicast address
0xA40d  = ENET: Out of memory
0xA40e  = ENET: Not a joined group
0xA40f  = ENET: Transmit ring full
0xA410  = ENET: IP Table full of IP pairs
0xA411  = ENET: Generic alloc failed
0xA412  = ENET: Device failed to initialize
0xA413  = ENET: Device read or write timeout
0xA414  = ENET: Couldn't allocate buffers (out of memory)
0xA415  = ENET: Couldn't allocate MAC context (out of memory)
0xA416  = ENET: Couldn't allocate TX buffer (out of memory)
0xA417  = ENET: Invalid initialization parameter
0xA418  = ENET: Shutdown failed, device in use
0xc001  = IPC: Route Exists
0xffffffff = IO_ERROR

[strings:KLOG_FN]
0x101   = _task_ready
0x102   = _task_block
0x103   = _task_execute_scheduler
0x104   = _task_create
0x105   = _task_create_block
0x106   = _task_destroy
0x107   = _time_dequeue
0x108   = _sched_setscheduler
0x109   = _sched_yield
0x10a   = _sched_setparam
0x10b   = _sched_setparam_td
0x10c   = _sched_boost_priority
0x10d   = _sched_unboost_priority
0x10e   = _task_exit_function
0x10f   = _taskq_create
0x110   = _taskq_destroy
0x111   = _taskq_suspend
0x112   = _taskq_resume
0x113   = _sched_set_policy
0x114   = _sched_set_rr_interval
0x115   = _sched_set_rr_interval_ticks
0x116   = _taskq_suspend_task
0x117   = _task_set_priority
0x118   = _time_dequeue_td
0x119   = _task_abort
0x11a   = _task_set_environment
0x11b   = _task_enable_fp
0x11c   = _task_disable_fp
0x11d   = _task_set_parameter
0x11e   = _task_set_parameter_for
0x11f   = _task_stop_preemption
0x120   = _task_start_preemption
0x121   = _task_set_exception_handler
0x122   = _task_set_exit_handler
0x123   = _taskq_test
0x124   = _io_set_handle
0x125   = _task_restart
0x126   = _task_create_at
0x201   = _mqx_exit
0x202   = _int_default_isr
0x203   = _task_set_error
0x204   = _log_test
0x205   = _mqx_set_exit_handler
0x206   = _mqx_fatal_error
0x401   = _msgq_close
0x402   = _msgpool_create_system
0x403   = _msgpool_create
0x404   = _msgpool_destroy
0x405   = _msg_free
0x406   = _msg_alloc_system
0x407   = _msg_alloc
0x408   = _msgq_get_owner
0x409   = _msgq_open
0x40a   = _msgq_open_system
0x40b   = _msgq_receive
0x40c   = _msgq_receive_for
0x40d   = _msgq_receive_ticks
0x40e   = _msgq_receive_until
0x40f   = _msgq_poll
0x410   = _msgq_get_count
0x411   = _msgq_send
0x412   = _msgq_send_blocked
0x413   = _msgq_send_queue
0x414   = _msgq_send_urgent
0x415   = _msgq_send_broadcast
0x416   = _msgq_set_notification_function
0x417   = _msgq_peek
0x418   = _msgq_send_priority
0x419   = _msg_create_component
0x41a   = _msgpool_test
0x41b   = _msgq_test
0x41c   = _lwmsgq_init
0x41d   = _lwmsgq_send
0x41e   = _lwmsgq_receive
0x801   = _int_install_kernel_isr
0x802   = _int_install_isr
0x803   = _int_install_default_isr
0x804   = _int_set_isr_data
0x805   = _int_set_exception_handler
0x1001  = _mem_free
0x1002  = _mem_alloc
0x1003  = _mem_alloc_from
0x1004  = _mem_test
0x1005  = _mem_test_pool
0x1006  = _mem_alloc_zero
0x1007  = _mem_alloc_system
0x1008  = _mem_alloc_system_from
0x1009  = _mem_alloc_system_zero
0x100a  = _mem_alloc_system_zero_from
0x100b  = _mem_extend
0x100c  = _mem_extend_pool
0x100d  = _mem_transfer
0x100e  = _mem_free_part
0x100f  = _mem_create_pool
0x1010  = _lwmem_alloc
0x1011  = _lwmem_alloc_from
0x1012  = _lwmem_alloc_zero
0x1013  = _lwmem_alloc_zero_from
0x1014  = _lwmem_create_pool
0x1015  = _lwmem_free
0x1016  = _lwmem_alloc_system
0x1017  = _lwmem_alloc_system_from
0x1018  = _lwmem_transfer
0x1019  = _lwmem_alloc_system_zero
0x101a  = _lwmem_alloc_system_zero_from
0x101b  = _lwmem_get_free
0x101c  = _lwmem_get_free_from
0x101d  = _mem_alloc_align
0x101e  = _mem_alloc_at
0x101f  = _lwmem_alloc_at
0x1020  = _lwmem_alloc_align
0x1021  = _lwmem_alloc_align_from
0x1022  = _usr_lwmem_alloc
0x80001 = _partition_create
0x80002 = _partition_create_at
0x80003 = _partition_alloc
0x80004 = _partition_alloc_zero
0x80005 = _partition_alloc_system
0x80006 = _partition_alloc_system_zero
0x80007 = _partition_extend
0x80008 = _partition_free
0x80009 = _partition_test
0x8000a = _partition_transfer
0x8000b = _partition_destroy
0x8000c = _partition_create_component
0x8000d = _partition_calculate_blocks

0x2001  = _time_set
0x2002  = _time_set_ticks
0x2003  = _time_delay
0x2004  = _time_delay_for
0x2005  = _time_delay_ticks
0x2006  = _time_delay_until
0x2007  = _timer_create_component
0x2008  = _timer_cancel
0x2009  = _timer_start_oneshot_after
0x200a  = _timer_start_oneshot_at
0x200b  = _timer_start_periodic_every
0x200c  = _timer_start_periodic_at
0x200d  = _timer_test
0x200e  = _timer_start_oneshot_after_ticks
0x200f  = _timer_start_oneshot_at_ticks
0x2010  = _timer_start_periodic_every_ticks
0x2011  = _timer_start_periodic_at_ticks
0x2012  = _lwtimer_create_periodic_queue
0x2013  = _lwtimer_add_timer_to_queue
0x2014  = _lwtimer_cancel_period
0x2015  = _lwtimer_cancel_timer
0x2016  = _lwtimer_test
0x4001  = _event_create_component
0x4002  = _event_create
0x4003  = _event_destroy
0x4004  = _event_open
0x4005  = _event_close
0x4006  = _event_wait_all
0x4007  = _event_wait_all_ticks
0x4008  = _event_wait_all_for
0x4009  = _event_wait_all_until
0x400a  = _event_wait_any
0x400b  = _event_wait_any_ticks
0x400c  = _event_wait_any_for
0x400d  = _event_wait_any_until
0x400e  = _event_set
0x400f  = _event_clear
0x4010  = _event_create_fast
0x4011  = _event_open_fast
0x4012  = _event_destroy_fast
0x4013  = _event_test
0x4014  = _lwevent_clear
0x4015  = _lwevent_create
0x4016  = _lwevent_destroy
0x4017  = _lwevent_set
0x4018  = _lwevent_test
0x4019  = _lwevent_wait
0x401a  = _lwevent_wait_for
0x401b  = _lwevent_wait_until
0x401c  = _lwevent_wait_ticks
0x401d  = _lwevent_set_auto_clear
0x401e  = _lwevent_get_signalled
0x8001  = _name_create_component
0x8002  = _name_add
0x8003  = _name_delete
0x8004  = _name_find
0x8005  = _name_find_name
0x8006  = _name_test
0x10001 = _mutatr_init
0x10002 = _mutatr_destroy
0x10003 = _mutatr_set_sched_protocol
0x10004 = _mutatr_set_priority_ceiling
0x10005 = _mutex_create_component
0x10006 = _mutex_init
0x10007 = _mutex_set_priority_ceiling
0x10008 = _mutex_destroy
0x10009 = _mutex_lock
0x1000a = _mutex_try_lock
0x1000b = _mutex_unlock
0x1000c = _mutatr_set_wait_protocol
0x1000d = _mutatr_set_spin_limit
0x1000e = _mutex_test
0x20001 = _sem_create_component
0x20002 = _sem_create
0x20003 = _sem_destroy
0x20004 = _sem_open
0x20005 = _sem_close
0x20006 = _sem_post
0x20007 = _sem_create_fast
0x20008 = _sem_open_fast
0x20009 = _sem_destroy_fast
0x2000a = _sem_test
0x2000b = _sem_wait
0x2000c = _sem_wait_for
0x2000d = _sem_wait_ticks
0x2000e = _sem_wait_until
0x2000f = _lwsem_create
0x20010 = _lwsem_wait
0x20011 = _lwsem_post
0x20012 = _lwsem_destroy
0x20013 = _lwsem_test
0x20014 = _lwsem_poll
0x20015 = _lwsem_wait_for
0x20016 = _lwsem_wait_ticks
0x20017 = _lwsem_wait_until
0x40001 = _watchdog_create_component
0x40002 = _watchdog_stop
0x40003 = _watchdog_start
0x40004 = _watchdog_start_ticks
0x40005 = _watchdog_test
0x100001 = ENET_send
0x100002 = ENET_recv
0x200001 = _eds_create_component
0x200002 = _eds_remove

[strings:PSP_CPU_TYPE]
0x2000 = ARM Cortex M4
0x4000 = ARM Cortex M0+
; Kinetis GP Series with Cortex M4 core
0x201F = MK (Kinetis K1x)
0x202F = MK (Kinetis K2x)
0x203F = MK (Kinetis K3x)
0x204F = MK (Kinetis K4x)
0x205F = MK (Kinetis K5x)
0x206F = MK (Kinetis K6x)
0x207F = MK (Kinetis K7x)

; Kinetis GP L-Series with Cortex M0+ core
0x420F = MKL (Kinetis L0x)
0x421F = MKL (Kinetis L1x)
0x422F = MKL (Kinetis L2x)
0x423F = MKL (Kinetis L3x)
0x424F = MKL (Kinetis L4x)

; Kinetis GP E-Series with Cortex M0+ core
0x430F = MKE (Kinetis E0x)
0x431F = MKE (Kinetis E1x)
0x432F = MKE (Kinetis E2x)
0x433F = MKE (Kinetis E3x)
0x434F = MKE (Kinetis E4x)
0x435F = MKE (Kinetis E5x)
0x436F = MKE (Kinetis E6x)

[strings:TASK_STATE]
0x002   = Ready
0x003   = Blocked
0x005   = Rx Msg Blocked
0x007   = Rx Msg Blocked - any
0x009   = Terminating
0x00B   = Unhandled Interrupt
0x00D   = Msg Send Blocked
0x00F   = Breakpoint
0x021   = Semaphore Blocked
0x025   = Event Blocked
0x102   = Time delay blocked
0x103   = Blocked with timeout
0x105   = Rx Msg Blocked with timeout
0x107   = Rx Msg Blocked - any, withtimeout
0x109   = Terminating with timeout
0x10B   = Unhandled Interrupt with timeout
0x10D   = Msg Send Blocked with timeout
0x10F   = Breakpoint with timeout
0x121   = Semaphore Blocked with timeout
0x211   = I/O Blocked
0x125   = Event Blocked with timeout
0x223   = Mutex Blocked
0x229   = Task Queue Blocked
0x311   = I/O Blocked with timeout
0x323   = Mutex Blocked with timeout
0x329   = Task Queue Blocked with timeout
0x42b   = LW Semaphore Blocked
0x42d   = LW Event Blocked
0x431   = LW Msg Rx Blocked
0x433   = LW Msg Send Blocked
0x401   = Aux Queue Blocked
0x501   = Aux Queue Blocked with timeout
0x52b   = LW Semaphore Blocked with timeout
0x52d   = LW Event Blocked with timeout
0x531   = LW Msg Rx Blocked with timeout
0x533   = LW Msg Send Blocked with timeout

[strings:MEM_TYPE]
1    = System Stack;System/Tasks
2    = Interrupt Stack;System/Interrupts
3    = Interrupt Table;System/Interrupts
4    = Task Descriptor + Stack;System/Tasks
5    = Ready Qs;System/Task Queues
6    = Partition Component;System/Partitions
7    = Partition;System/Partitions
8    = Partition Blocks;System/Partitions
9    = Message Component;System/Messages
10   = Message Queues;System/Messages
11   = Message Pools;System/Messages
12   = Message Pool Blocks;System/Messages
13   = LW Log Component;System/LW Log
14   = LW Log;System/LW Log
15   = I/O Device;IO/IO Subsystem
16   = File;IO/IO Subsystem
17   = Task Queue;System/Task Queues
18   = EDS buffer;IO/EDS
19   = Event component;System/Events
20   = Event connection;System/Events
21   = Event;System/Events
22   = Log component;System/Logs
23   = Log;System/Logs
24   = Mutex component;System/Mutex
25   = Name component;System/Name
26   = Semaphore component;System/Semaphore
27   = Semaphore connection;System/Semaphore
28   = Semaphore;System/Semaphore
29   = Timer component;System/Timer
30   = Timer entry;System/Timer
31   = Watchdog component;System/Watchdog
32   = Watchdog alarm;System/Watchdog
33   = PSP support struct;System/Other
34   = FP context;System/Other
35   = Interrupt Vector;System/Interrupts
36   = Task Descriptor;System/Tasks
37   = Task Stack;System/Tasks
1001 = I/O PCflash;IO/PC Flash
1002 = I/O Sector buffer;IO/PC Flash
1003 = I/O chan struct;IO/Other
1004 = Enet context;IO/ENET
1005 = Ethernet Buffers;IO/ENET
1006 = Ethernet MCB;IO/ENET
1007 = Ethernet ECB;IO/ENET
1008 = I/O I2C polled;IO/I2C
1009 = I/O I2C info;IO/I2C
1010 = I/O DUN;IO/DUN
1011 = I/O DUN dev;IO/DUN
1012 = I/O GPIO dev data;IO/GPIO
1013 = I/O GPIO pin map;IO/GPIO
1014 = I/O Mem struct;IO/Mem
1015 = I/O Mem data;IO/Mem
1016 = I/O Serial int. device struct;IO/Serial
1017 = I/O Serial polled device struct;IO/Serial
1018 = I/O Serial in queue;IO/Serial
1019 = I/O Serial out queue;IO/Serial
1020 = I/O Serial charq;IO/Serial
1021 = I/O Serial info struct;IO/Serial
1022 = I/O TFS drive struct;IO/TFS
1023 = I/O SPI int. Device Struct;IO/SPI
1024 = I/O SPI polled Device Struct;IO/SPI
1025 = I/O SPI input buffer;IO/SPI
1026 = I/O SPI output buffer;IO/SPI
1027 = I/O SPI info struct;IO/SPI
1028 = I/O FlashX RAM function;IO/FlashX
1029 = I/O FlashX sector cache;IO/FlashX
1030 = I/O FlashX sector map;IO/FlashX
1031 = I/O I2C int. device struct;IO/I2C
1032 = I/O I2C polled device struct;IO/I2C
1033 = I/O I2C input buffer;IO/I2C
1034 = I/O I2C output buffer;IO/I2C
1035 = I/O I2C info struct;IO/I2C
1036 = I/O PCB pointers;IO/ENET
1037 = I/O PCB structures;IO/ENET
1038 = I/O Buffer descriptors;IO/ENET
1039 = I/O ENET MAC context;IO/ENET
1040 = I/O SDCARD structures;IO/SD Card
1041 = I/O ESDHC device struct;IO/SDHC
1042 = I/O ESDHC info struct;IO/SDHC
1043 = I/O TCHRES struct;IO/TCHRES
1044 = I/O TCHRES xy pin struct;IO/TCHRES
1045 = I/O USB DCD info struct;IO/USB
1046 = I/O USB DCD polled device struct;IO/USB
1047 = I/O USB DCD int device sturct;IO/USB
1048 = I/O SDIO int device sturct;IO/SDIO
1049 = I/O SDIO in buffer;IO/SDIO
1050 = I/O SDIO out buffer;IO/SDIO
1051 = I/O LPM driver entry;IO/LPM
1052 = I/O QuadSPI device struct;IO/QuadSPI
1053 = I/O I2S/SAI device struct;IO/I2S
1054 = I/O I2S/SAI left channel buffer;IO/I2S
1055 = I/O I2S/SAI right channel buffer;IO/I2S
1059 = I/O DCU4 device struct;IO/DCU4
1060 = I/O DCU4 info struct;IO/DCU4
1061 = I/O FBDEV device struct;IO/FBDEV
1062 = I/O FBDEV info struct;IO/FBDEV

[strings:TASK_FLAGS]
0x1 = AutoStart
0x2 = Floating
0x4 = TimeSlice
0x8 = DSP
0x10 = UserMode

[strings:TASK_SYSTEM_FLAGS]
0x1     = AutoStart
0x2     = Floating
0x4     = TimeSlice
0x8     = DSP
0x10    = UserMode
0x8000  = Boosted
0x4000  = Logging
0x2000  = Watchdog Started;
0x1000  = Pre-emption Disabled
0x800   = Watchdog Running;
0x400   = MMU Context Saved
0x200   = FP Context Saved
0x100   = DSP Context Saved
0x80    = Wait All Bits
0x40    = Scratch Saved
0x20    = Stack Preallocated
0x10000 = UserModeRun

[strings:IO_COMPONENT]
0 = I/O Subsystem
1 = RTCS
2 = SNMP
3 = MFS
4 = USB
5 = Shell
6 = ENET
7 = EDS

[perftool:FN_GROUPS]
Events=0x4001 0x4002 0x4003 0x4004 0x4005 0x4006 0x400a 0x400e 0x400f 0x4010 0x4011 0x4012 0x4013,event.gif
Mutexes=0x10005 0x10006 0x10007 0x10008 0x10009 0x1000a 0x1000b 0x1000c 0x1000d 0x1000e,mutex.gif
Messages=0x401 0x402 0x403 0x404 0x405 0x406 0x407 0x409 0x40a 0x40b 0x40f 0x410 0x411 0x412 0x413 0x414 0x415 0x416 0x417 0x418 0x419 0x41a 0x41b 0x41c 0x41d 0x41e,message.gif
Semaphores=0x20001 0x20002 0x20003 0x20004 0x20005 0x20006 0x20007 0x20008 0x20009 0x2000b 0x2000f 0x20010 0x20011 0x20012 0x2000a 0x20013,semaphore.gif
Scheduler=0x108 0x109 0x10a 0x10b 0x10c	0x10d 0x113 0x114,scheduler.gif
Tasks=0x101 0x102 0x103 0x104 0x106 0x10e 0x10f 0x110 0x111 0x112	0x116 0x117 0x119 0x11a 0x11b 0x11c 0x11d 0x11f 0x120 0x121	0x122 0x123,tasks.gif

[strings:VALID_FLAGS]
0x65766E74 = EVENT_VALID
0x6c6f6720 = LOG_VALID
0x6C65766E = LWEVENT_VALID
0x6C776C67 = LWLOG_VALID
0x6C6D6570 = LWMEM_POOL_VALID
0x6C776D73 = LWMSGQ_VALID
0x6C777469 = LWTIMER_VALID
0x6D656D70 = MEMPOOL_VALID
0x6d657373 = MESSAGE_VALID
0x74736b71 = TASK_QUEUE_VALID
0x6C77736D = LWSEM_VALID
0x6D67     = MSG_VALID
0x6d757478 = MUTEX_VALID
0x6e616d65 = NAME_VALID
0x70617274 = PARTITION_VALID
0x73656d20 = SEM_VALID
0x74696d72 = TIMER_VALID
0x77646f67 = WATCHDOG_VALID

[strings:IO_SERIAL_OPEN_MODE]
0 = Raw
0x01 = XON/XOFF
0x02 = Translation
0x04 = Echo
0x08 = HW Flow Control
0x10 = Non-blocking
0x20 = RS-485

[strings:SCHED_POLICY]
1 = FIFO
2 = Round Robin
-1 = FIFO

[strings:MQX_CONFIG_1]
0x0001 = Floating Point IO
0x0002 = Use Inline Macros
0x0004 = Kernel Logging
0x0008 = Stack Monitoring
0x0010 = Task Creation Blocks
0x0020 = Task Destruction
0x0040 = Component Destruction
0x0080 = Check Errors
0x0100 = Check Validity
0x0200 = Check Mem Alloc Errors
0x0400 = 32 bit Queue IDs
0x0800 = Mem Free List Sorted
0x1000 = Default Time Slice In Ticks
0x2000 = LWLog Time Stamp In Ticks
0x4000 = Profiling Enabled
0x8000 = Run Time Error Check Enabled

[strings:MQX_CONFIG_2]
 0x0001 = Use 32-Bit types
 0x0002 = Timer uses ticks only
 0x0004 = Exit enabled
 0x0008 = Use Idle task
 0x0010 = Multi-processor
 0x0020 = Has Time slice
 0x0040 = Mutex has polling
 0x0080 = Use LW Memory allocator
 0x0100 = Use Typed memory

[strings:LWEVENT_FLAGS]
0 = None
1 = Auto Clear

[strings:MSGPOOL_TYPES]
5 = Private
10 = System

[strings:MUTEX_PROTOCOLS]
0x01 = Spin only
0x02 = Limited spin
0x04 = Queuing
0x08 = Priority Queuing
0x0100 = Priority Inheritance
0x0200 = Priority Protect

[strings:LWLOG_TYPE]
1 = Static
2 = Dynamic

[strings:LWLOG_FLAGS]
0x0 = Disabled
0x1 = Disabled, Overwrite
0x1000 = Enabled
0x1001 = Enabled, Overwrite

[strings:VALID_FLAGS]
0x52544353 = SOCKET_VALID

[strings:SEM_POLICY]
1 = Priority Queuing
2 = Priority Inheritance
4 = Strict

[strings:SEM_POLICY_NOT]
1 = FIFO Queuing
4 = Not Strict


[strings:TASKQ_POLICY]
0 = Fifo
8 = Priority

[strings:PARTITION_TYPE]
2 = Dynamic
4 = Static
